export type TDateTimeOptions = {
    timeZone?: string;
    hour12?: boolean;
    year?: 'numeric' | '2-digit';
    month?: 'numeric' | '2-digit' | 'long' | 'short' | 'narrow';
    day?: 'numeric' | '2-digit';
    hour?: 'numeric' | '2-digit';
    minute?: 'numeric' | '2-digit';
    second?: 'numeric' | '2-digit';
    weekday?: 'long' | 'short' | 'narrow';
    fractionalSecondDigits?: 3;
    timeZoneName?: 'shortOffset' | 'longOffset';
};
/**
 *
 * @param inputDate - An input of date (Date, number or string).
 * @param locale - Language code or locale (Ex: `'vi'`, `'vi-VN'`).
 * - Default: `'vi'`
 * @param options
 * - Default: an object with the following options
 * @param options.timeZone - The time zone that the output date string is rendered.
 * - Default: system time zone
 * @param options.hour12 - A boolean option to display hour.
 * - Default: `false`
 * - `true`: 15:00:00 => 03:00:00 PM (en), 03:00:00 CH (vi)
 * - `false`: 15:00:00 => 15:00:00
 * @param options.year
 * - Default: `numeric`
 * - `numeric`: 2023 => 2023
 * - `2-digit`: 2023 => 23
 * @param options.month
 * - Default: `2-digit`
 * - `numeric`: 09 => 09
 * - `2-digit`: 09 => 9
 * - `long`: 09 => 'September'
 * - `short`: 09 => 'Sep'
 * - `narrow`: 09 => 'S'
 * @param options.day
 * - Default: `2-digit`
 * - `numeric`: 09 => 09
 * - `2-digit`: 09 => 9
 * @param options.hour
 * - Default: `2-digit`
 * - `numeric`: 09 => 09
 * - `2-digit`: 09 => 9
 * @param options.minute
 * - Default: `2-digit`
 * - `numeric`: 09 => 09
 * - `2-digit`: 09 => 9
 * @param options.second
 * - Default: `2-digit`
 * - `numeric`: 09 => 09
 * - `2-digit`: 09 => 9
 * @param options.weekday
 * - Default: `undefined`
 * - `long`: Monday => Monday
 * - `short`: Monday => Mon
 * - `narrow`: Monday => M
 *
 * @returns A formatted date string in a specific language; returns `undefined` if `value` doesn't present an invalid date.
 *
 */
export declare const formatDateTime: (inputDate: Date | number | string, locale?: string, options?: TDateTimeOptions) => string | undefined;
/**
 * A formatted date string in a specific language and pattern; returns `undefined` if `inputDate` doesn't present an invalid date or `pattern` is invalid.
 *
 * @param inputDate - An input of date (Date, number or string).
 * @param pattern - A pattern to format date time (describe as below).
 * @param locale - Language code or locale (Ex: `'vi'`, `'vi-VN'`).
 * - Default: `'vi'`
 * @param timeZone - The time zone that the output date string is rendered.
 * - Default: system time zone
 *
 *
 * // WEEKDAY: Monday
 * - w: M
 * - ww: Mon
 * - www: Monday
 *
 * // DAY: 7
 * - d: 7
 * - dd: 07
 *
 * // MONTH: 9
 * - m: 9
 * - mm: 09
 * - mmm: S
 * - mmmm: Sep
 * - mmmmm: September
 *
 * // YEAR: 2023
 * - yy: 23
 * - yyyy: 2023
 *
 * // HOUR: 9
 * - h: 9, (12-hour format)
 * - hh: 09, (12-hour format)
 * - H: 9, (24-hour format)
 * - HH: 09, (24-hour format)
 *
 * // MINUTE: 9
 * - M: 9
 * - MM: 09
 *
 * // SECOND: 9
 * - s: 9
 * - ss: 09
 *
 * // MICROSECONDS: 99 (3-digit)
 * - S: 099
 *
 * // TIMEZONE OFFSET: GMT+7
 * - t: GMT+7
 * - tt: GMT+07:00
 *
 * // DAY PERIOD (only affected for 12-hour format)
 * - p: AM (en), SH (vi)
 *
 */
export declare const formatDateTimeWithPattern: (inputDate: Date | number | string, pattern: string, locale?: string, timeZone?: string) => string | undefined;
